@model IPagedList<InventoryModel>
@{
    ViewData["Title"] = "Danh sách kho";
    var linkTo = "/Inventory";
}

<h2>@ViewData["Title"].</h2>
<div>
    <a asp-controller="InventoryOperation" class="btn btn-default create-new--btn">
        <i class="glyphicon glyphicon-sort"></i>
        Xuất/Nhập
    </a>
</div>

@Html.Partial("SmartPager", Model, new ViewDataDictionary(ViewData)
{
    { "mc-sl-to", "/Inventory" }
})

<table class="table table-striped table-hover allow-edit inventory-detail">
    <tbody>
        @if (Model != null && Model.Any())
        {
            var dummyDetail = Model.FirstOrDefault();
            <tr>
                <th>@Html.RenderTableHeaderAnchor(linkTo, "Id", Html.DisplayNameFor(m => dummyDetail.Id))</th>
                <th>@Html.DisplayNameFor(m => dummyDetail.MaterialCode)</th>
                <th>@Html.DisplayNameFor(m => dummyDetail.MaterialName)</th>
                <th>@Html.RenderTableHeaderAnchor(linkTo, "InStock", Html.DisplayNameFor(m => dummyDetail.InStock))</th>
            </tr>

            @for (var index = 0; index < Model.Count; index++)
            {
                <tr>
                    <td>
                        <a class="hover-view" title="Xem xuất nhập của vật tư này"
                           asp-controller="InventoryOperation" asp-action="Filter" asp-route-materialId="@Model[index].Id">
                            <i class="glyphicon glyphicon-link"></i>
                        </a>
                        <span class="normal-view">@Model[index].Id</span>
                    </td>
                    <td>@Model[index].MaterialCode</td>
                    <td>@Model[index].MaterialName</td>
                    <td>@Model[index].InStock</td>
                </tr>
            }
        }
    </tbody>
</table>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
