(function ($) {
    $.fn.attrs = function (attrs) {
        var t = $(this);
        if (attrs) {
            // Set attributes
            t.each(function (i, e) {
                var j = $(e);
                for (var attr in attrs) {
                    j.attr(attr, attrs[attr]);
                }
            });
            return t;
        } else {
            // Get attributes
            var a = {},
                r = t.get(0);
            if (r) {
                r = r.attributes;
                for (var i in r) {
                    var p = r[i];
                    if (typeof p.nodeValue !== 'undefined') a[p.nodeName] = p.nodeValue;
                }
            }
            return a;
        }
    };
})(jQuery);
(function ($) {
    $.fn.getFormData = function () {
        var data = {};
        var dataArray = $(this).serializeArray();
        for (var i = 0; i < dataArray.length; i++) {
            data[dataArray[i].name] = dataArray[i].value;
        }

        return data;
    };
})(jQuery);
(function ($) {
    var defaults = {
        formSelector: '#form',
        submitBtnSelector: '.js-save-btn'
    };

    $.fn.registerModal = function (options) {
        var settings = $.extend({}, defaults, options);

        var $modal = $(this);
        var $form = $(settings.formSelector, $modal);

        $(settings.submitBtnSelector).click(function () {
            var $button = $(this);
            if (!$form.valid()) return;
            $.ajax({
                url: $button.attr('mc-modal-post-url'),
                data: $form.getFormData(),
                type: 'POST',
                success: function (data) {
                    location.reload();
                }
            });
        });

        $("input[type='checkbox']", $form).on("click", function () {
            if ($(this).prop('checked')) {
                $(this).attr('value', true);
            } else {
                $(this).attr('value', false);
            }
        });
    }
})(jQuery);
Mica = {};
Mica.Utils = {};
Mica.Common = {};
Mica.Inventory = {};
Mica.Utils.QueryString = {
    getObject: function () {
        var vars = {};
        if (window.location.href.indexOf('?') < 0) return {};

        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            var hash = hashes[i].split('=');
            vars[hash[0]] = hash[1];
        }
        return vars;
    },

    serialize: function (obj) {
        var str = [];
        for (var p in obj)
            if (obj.hasOwnProperty(p)) {
                str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
            }

        if (str.length > 0) {
            return '?' + str.join('&');
        }

        return null;
    }
}

Mica.Common.Modal = {
    bindEvent: function ($scope, options) {
        var settings = {
            openModalBtn: '.js-open-modal',
            modalContentSelector: '.modal-content'
        };

        $.extend(settings, options);

        if (!$scope)
            $scope = $(document);

        $(settings.openModalBtn, $scope).on('click', function () {
            var contentUrl = $(this).attr('mc-modal-content-url');
            var target = $(this).attr('data-target');

            // clear modal content
            $(settings.modalContentSelector, target).html('');

            $.ajax({
                url: contentUrl,
                type: 'GET',
                success: function (data) {
                    $(settings.modalContentSelector, target).html(data);
                    $(target).registerModal();
                }
            });
        });
    }
};
Mica.Common.SmartLink = {
    bindEvent: function ($scope, options) {
        var settings = {
            hrefDefault: ''
        };

        $.extend(settings, options);

        if (!$scope)
            $scope = $(document);

        var $links = $('a[mc-sl-to]', $scope);

        // clickable look & feel
        $links.each(function (index, element) {
            element.href = settings.hrefDefault;
        });

        $links.click(function () {
            var $link = $(this);
            var canRedirect = $link.attr('mc-sl-can-redirect');
            if (canRedirect && canRedirect !== "True") return;

            var target = $link.attr('mc-sl-to');

            var attrs = $link.attrs();

            var localQueryString = {};
            Object.keys(attrs).forEach(function (attr) {
                if (attr.startsWith('mc-sl-route')) {
                    localQueryString[attr.substring(12)] = $link.attr(attr);
                }
            });

            var currentQueryString = Mica.Utils.QueryString.getObject();
            $.extend(currentQueryString, localQueryString);

            window.location.href = target + Mica.Utils.QueryString.serialize(currentQueryString);
        });
    }
};


$(document).ready(function () {
    Mica.Common.SmartLink.bindEvent();
    Mica.Common.Modal.bindEvent();
});